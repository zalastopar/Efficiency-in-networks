a <- 5
b <- 7 + a
b
50*1.05
pot = c(u, d, u, d, u, u, u, u, u, u, d, u, d, d, d,
d, d, u, u, u, u, d, u, u, u)
# 1. A)
S_0 = 50
u = 1.05
d = 0.95
U = 5
R = 0.03
T = 3
pot = c(u, d, u, d, u, u, u, u, u, u, d, u, d, d, d,
d, d, u, u, u, u, d, u, u, u)
pot = c(u, d, u, d, u, u, u, u, u, u, d, u, d, d, d,
d, d, u, u, u, u, d, u, u, u)
dim(pot) <- c(5, 5)
pot
63.81-55.12
52.24-47.50
57.74-52.5
57.88-52.5
42.76-47.5
47.38-45.12
52.37-49.88
a <- c(1, 2, 3, 4,5)
a[:3]
head(a, 3)
tail(a, 3)
b <- (1, 4, 5)
b <- c(1, 4, 5)
a-b
a[3:]
a[3:5]
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
izplacilo(c(50,52.5,49.88,52.37,49.75,52.24),3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
izplacilo(c(50,52.5,49.88,52.37,49.75,52.24),3,"call")
izplacilo(c(50,52.5,55.12,57.88,60.78,63.81),3,"put")
63.81-55.12
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
izplacilo(c(50,52.5,49.88,52.37,49.75,52.24),3,"call")
izplacilo(c(50,52.5,55.12,57.88,60.78,63.81),3,"put")
izplacilo(c(50,52.5,55.12,57.88,60.78,63.81),3,"call")
63.81-52.5
55.12-50
63.81-52.5
63.81-52.5
c(1, 2, 3)
a <- c(1, 2, 3)
a[1]
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
izplacilo(c(50,52.5,55.12,57.88,60.78,63.81),3,"put")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
izplacilo(c(50,52.5,55.12,57.88,60.78,63.81),3,"put")
izplacilo(c(50,52.5,55.12,57.88,60.78,63.81),3,"call")
izplacilo(c(60,61.2,59.98,58.78,57.6,58.75,57.58),5,"put")
izplacilo(c(60,58.8,57.62,58.78,59.95,61.15,62.37),4,"call")
izplacilo(c(70,66.5,69.83,73.32,76.98,73.13,69.48),2,"put")
izplacilo((50.00, 52.50, 49.88, 52.37, 49.75, 52.24), T "put")
izplacilo(c(50.00, 52.50, 49.88, 52.37, 49.75, 52.24), T, "put")
izplacilo(c(50.00, 52.50, 49.88, 52.37, 49.75, 52.24), T, "call")
izplacilo(c(50.00, 52.50, 55.12, 57.88, 60.78, 63.81), T, "call")
izplacilo(c(50.00, 52.50, 55.12, 57.88, 60.78, 63.81), T, "put")
izplacilo(c(50.00, 47.50, 49.88, 47.38, 45.01, 42.76), T, "put")
izplacilo(c(50.00, 47.50, 49.88, 47.38, 45.01, 42.76), T, "call")
T
izplacilo(c(50.00, 47.50, 45.12, 47.38, 49.75, 52.24), T, "call")
izplacilo(c(50.00, 47.50, 45.12, 47.38, 49.75, 52.24), T, "put")
52.24-47.38
49.75-47.38
49.75-45.12
47.38-45.12
izplacilo(c(50.00, 52.50, 49.88, 52.37, 54.99, 57.74), T, "put")
izplacilo(c(50.00, 52.50, 49.88, 52.37, 54.99, 57.74), T, "call")
hcube(3, 4)
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
install.packages(c("combinat", "Rlab"))
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
hcube(C(4, 4))
hcube(c(4, 4), scale = 1)
hcube(c(4, 4), scale = 0)
hcube(c(4, 4))
hcube(c(4, 4), scale = 1, translation = c(1, 1))
hcube(c(1, 1), scale = 1, translation = c(4, 4))
n <- 4
rep(2, n*n)
hcube(rep(2, 9), translation=-1)
hcube(c(4,4), translation=-1)
hcube(c(2, 2), translation=-1)
U
hcube(rep(2, U))
hcube(rep(2, U), translation=-1)
hcube(rep(2, 4), translation=-1)*3
hcube(rep(2, 4), translation=-1, scale = 3)
x <- hcube(rep(2, 4), translation=-1, scale = 3)
x[x<3] <- 0
x
cbind(rep(3, 16), x)
length(x)
nrow(x)
vector()
x <- vector()
c(x, 3)
c(x, 4, 5)
x <- hcube(rep(2, 4), translation=-1, scale = 3)
x[2, :]
x
x <- hcube(rep(2, 4), translation=-1, scale = 3)
x
x[3,]
install.packages(c("combinat", "Rlab"))
cumprod(x)
x
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
q <- (1+R-d)/(u*d)
binomski(50,1.05,0.95,5,0.03,3,"call")
cube
stanja
stanja
stanja
length(stanja)
(1:length(stanja)
7
c(1:length(stanja)
U
2^U
S_0
U
6 * 32
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
View(binomski)
binomski(50,1.05,0.95,5,0.03,3,"call")
binomski(50,1.05,0.95,5,0.03,3,"call")
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski <- function(S0,u,d,U,R,T,type) {
q <- (1+R-d)/(u*d)
cube <- hcube(rep(2, U), translation=-1)*u
cube[cube < 1] <- d
stanja <- cbind(rep(S0, nrow(cube)), cube)
stanja <- cumprod(stanja)
stanja <- matrix(stanja, nrow = 2^U, ncol = (U + 1))
izplacila <- vector()
for (i in (1:length(stanja))) {
izplacano <- izplacilo(stanja[i], T, type)
izplacila <- c(izplacila, izplacano)
}
verjetnosti <- cube
verjetnosti[cube == u] <- q
verjetnosti[cube == d] <- 1-q
verjetnosti <- cumprod(verjetnosti)
izplacilo_in_verjetnosti <- cbind(izplacila, verjetnosti)
pricakovano_izplacilo <- cumprod(izplacilo_in_verjetnosti)
cena <- pricakovano_izplacilo/(1 + R)^U
return(cena)
}
binomski <- function(S0,u,d,U,R,T,type) {
q <- (1+R-d)/(u*d)
cube <- hcube(rep(2, U), translation=-1)*u
cube[cube < 1] <- d
stanja <- cbind(rep(S0, nrow(cube)), cube)
stanja <- cumprod(stanja)
stanja <- matrix(stanja, nrow = 2^U, ncol = (U + 1))
izplacila <- vector()
for (i in (1:length(stanja))) {
izplacano <- izplacilo(stanja[i], T, type)
izplacila <- c(izplacila, izplacano)
}
verjetnosti <- cube
verjetnosti[cube == u] <- q
verjetnosti[cube == d] <- 1-q
verjetnosti <- cumprod(verjetnosti)
izplacilo_in_verjetnosti <- cbind(izplacila, verjetnosti)
pricakovano_izplacilo <- cumprod(izplacilo_in_verjetnosti)
cena <- pricakovano_izplacilo/(1 + R)^U
return(cena)
}
binomski <- function(S0,u,d,U,R,T,type) {
q <- (1+R-d)/(u*d)
cube <- hcube(rep(2, U), translation=-1)*u
cube[cube < 1] <- d
stanja <- cbind(rep(S0, nrow(cube)), cube)
stanja <- cumprod(stanja)
stanja <- matrix(stanja, nrow = 2^U, ncol = (U + 1))
izplacila <- vector()
for (i in (1:length(stanja))) {
izplacano <- izplacilo(stanja[i], T, type)
izplacila <- c(izplacila, izplacano)
}
verjetnosti <- cube
verjetnosti[cube == u] <- q
verjetnosti[cube == d] <- 1-q
verjetnosti <- cumprod(verjetnosti)
izplacilo_in_verjetnosti <- cbind(izplacila, verjetnosti)
pricakovano_izplacilo <- cumprod(izplacilo_in_verjetnosti)
cena <- pricakovano_izplacilo/(1 + R)^U
return(cena)
}
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
stanja
stanja
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
stanja
stanja[3,]
izplacila <- vector()
binomski(50,1.05,0.95,5,0.03,3,"call")
stanje
izplacano
izplacano
izplacano
izplacila
c
n
izplacila
binomski(50,1.05,0.95,5,0.03,3,"call")
binomski(50,1.05,0.95,5,0.03,3,"call")
c
binomski(50,1.05,0.95,5,0.03,3,"call")
length(stanja)
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
izplacila
verjetnosti
q
verjetnosti
install.packages(c("combinat", "Rlab"))
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
verjetnosti
binomski(50,1.05,0.95,5,0.03,3,"call")
zmnozek
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
zmnozek
zmnozek
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
0.9197995*0.9197995*0.9197995*0.9197995*0.9197995
x <- c(1, 2, 3, 4, 5)
x[-1]
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
2.368750*5.005341e-03
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
2.368750 5.005341e-03
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA2/StoparSpringer2.R', encoding = 'UTF-8')
setwd("~/AMAT/Efficiency-in-networks")
library(readr)
Sim <- read_csv("Data/Sim.csv")
View(Sim)
library(readr)
Sim <- read_csv("Data/Sim.csv")
graph_4x3x2 <- Sim[c(301:310), c(2:6)]
View(graph_4x3x2)
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
grid_4x3x2$Napaka_10 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,3])
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
grid_4x3x2$Napaka_10 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,3])
View(grid_4x3x2)
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
grid_4x3x2$Napaka_10 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,3])
grid_4x3x2$Napaka_100 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,4])
grid_4x3x2$Napaka_1000 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,5])
graf_4x3x2 <- plot(grid_4x3x2[, c(1, 6)])
grid_4x3x2[,c(1, 6)
]
graf_4x3x2 <- plot(grid_4x3x2[,c(1, 6)])
graf_4x3x2 <- plot(x = grid_4x3x2[,1], y = grid_4x3x2[,6])
graf_4x3x2 <- plot(grid_4x3x2[,c(1)])
graf_4x3x2 <- plot(grid_4x3x2[,c(1, 6)])
grid_4x3x2[,c(1, 6)]
graf_4x3x2 <- plot(grid_4x3x2[,c(6)])
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
grid_4x3x2$Napaka_10 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,3])
grid_4x3x2$Napaka_100 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,4])
grid_4x3x2$Napaka_1000 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,5])
graf_4x3x2 <- plot(grid_4x3x2[,c(1, 6)])
graf_4x3x2 <- plot(x = grid_4x3x2[,1], y = grid_4x3x2[,6])
graf_4x3x2 <- plot(x = grid_4x3x2[,1], y = round(grid_4x3x2[,6], 3)
graf_4x3x2 <- plot(x = grid_4x3x2[,1], y = round(grid_4x3x2[,6], 3))
round(grid_4x3x2[,6], 3)
grid_4x3x2[,6]
grid_4x3x2[,1]
graf_4x3x2 <- plot( grid_4x3x2[,6])
graf_4x3x2
grid_4x3x2[,6]
grid_4x3x2[2,6]
graf_4x3x2 <- plot(grid_4x3x2[,c(16)])
graf_4x3x2 <- plot(grid_4x3x2[,c(1,6)])
graf_4x3x2 <- ggplot(grid_4x3x2, aes(grid_4x3x2[,1], grid_4x3x2[,6])) + geom_line()
library(ggplot2)
graf_4x3x2 <- ggplot(grid_4x3x2, aes(grid_4x3x2[,1], grid_4x3x2[,6])) + geom_line()
graf_4x3x2
typeof(Sim)
Sim <- data.frame(read_csv("Data/Sim.csv"))
typeof(Sim)
Sim <- data.frame(read_csv("Data/Sim.csv"))
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
typeof(grid_4x3x2)
Sim <- read.csv("Data/Sim.csv")
typeof(Sim)
library(readr)
library(ggplot2)
Sim <- read.csv("Data/Sim.csv")
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
grid_4x3x2$Napaka_10 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,3])
grid_4x3x2$Napaka_100 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,4])
grid_4x3x2$Napaka_1000 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,5])
graf_4x3x2 <- ggplot(grid_4x3x2, aes(grid_4x3x2[,1], grid_4x3x2[,6])) + geom_line()
View(graf_4x3x2)
# Grid 4x3x2
grid_4x3x2 <- data.frame(Sim[c(301:310), c(2:6)])
typeof(grid_4x3x2)
# Grid 4x3x2
grid_4x3x2 <- data.frame(Sim[c(301:310), c(2:6)])
typeof(grid_4x3x2)
View(graph_4x3x2)
View(graf_4x3x2)
graf_4x3x2
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
grid_4x3x2$Napaka_10 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,3])
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
grid_4x3x2$Napaka_10 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,3])
grid_4x3x2$Napaka_100 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,4])
grid_4x3x2$Napaka_1000 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,5])
graf_4x3x2 <- ggplot(grid_4x3x2, aes(grid_4x3x2[,1], grid_4x3x2[,6])) + geom_line()
graf_4x3x2
l = plot(grid_4x3x2[, c(1, 6)])
l = plot(grid_4x3x2[, c(1, 6)], type = "l")
Sim <- read.csv("Data/Sim.csv")
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
grid_4x3x2$Napaka_10 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,3])
grid_4x3x2$Napaka_100 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,4])
grid_4x3x2$Napaka_1000 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,5])
l = plot(grid_4x3x2[, c(1, 6)], type = "l")
l = plot(grid_4x3x2[, c(1, 6)], type = "l")
axis(1, at = c(0.01, 0.02, 0.03, 0.5))
m <- ggplot(grid_4x3x2, aes(Percent, Napaka_10)) + geom_line()
m
m <- ggplot(grid_4x3x2, aes(Percent, Napaka_10)) + geom_line() + scale_x_log10()
m
l <- plot(grid_4x3x2[, c(1, 6)], type = "l")
m <- ggplot(grid_4x3x2, aes(Percent, Napaka_10)) + geom_line() + scale_x_log10()
m
m <- ggplot(grid_4x3x2, aes(Percent, Napaka_10)) + geom_line() + scale_x_discrete(limits=c("0.01","0.02","0.5"))
m
m <- ggplot(grid_4x3x2, aes(Percent, Napaka_10)) + geom_line() + scale_x_discrete(limits=c(0.01,0.02,0.5))
m <- ggplot(grid_4x3x2, aes(Percent, Napaka_10)) + geom_line()
l <- plot(grid_4x3x2[, c(1, 6)], type = "l")
m <- ggplot(grid_4x3x2, aes(Percent, Napaka_10)) + geom_line() + scale_x_log10()
m
m <- ggplot(grid_4x3x2, aes(Percent, Napaka_100)) + geom_line() + scale_x_log10()
m
m <- ggplot(grid_4x3x2, aes(Percent, Napaka_10)) + geom_line() + scale_x_log10()
m
m <- ggplot(grid_4x3x2, aes(Percent, Napaka_100)) + geom_line() + scale_x_log10()
m <- ggplot(grid_4x3x2, aes(Percent, Napaka_100)) + geom_line()
m <- ggplot(grid_4x3x2, aes(Percent, Napaka_100)) + geom_line() + scale_x_continuous(breaks = c(0.01, 0.02, 0.03))
m
