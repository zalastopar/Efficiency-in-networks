a <- c(1, 2, 3, 4,5)
a[:3]
head(a, 3)
tail(a, 3)
b <- (1, 4, 5)
b <- c(1, 4, 5)
a-b
a[3:]
a[3:5]
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
izplacilo(c(50,52.5,49.88,52.37,49.75,52.24),3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
izplacilo(c(50,52.5,49.88,52.37,49.75,52.24),3,"call")
izplacilo(c(50,52.5,55.12,57.88,60.78,63.81),3,"put")
63.81-55.12
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
izplacilo(c(50,52.5,49.88,52.37,49.75,52.24),3,"call")
izplacilo(c(50,52.5,55.12,57.88,60.78,63.81),3,"put")
izplacilo(c(50,52.5,55.12,57.88,60.78,63.81),3,"call")
63.81-52.5
55.12-50
63.81-52.5
63.81-52.5
c(1, 2, 3)
a <- c(1, 2, 3)
a[1]
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
izplacilo(c(50,52.5,55.12,57.88,60.78,63.81),3,"put")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
izplacilo(c(50,52.5,55.12,57.88,60.78,63.81),3,"put")
izplacilo(c(50,52.5,55.12,57.88,60.78,63.81),3,"call")
izplacilo(c(60,61.2,59.98,58.78,57.6,58.75,57.58),5,"put")
izplacilo(c(60,58.8,57.62,58.78,59.95,61.15,62.37),4,"call")
izplacilo(c(70,66.5,69.83,73.32,76.98,73.13,69.48),2,"put")
izplacilo((50.00, 52.50, 49.88, 52.37, 49.75, 52.24), T "put")
izplacilo(c(50.00, 52.50, 49.88, 52.37, 49.75, 52.24), T, "put")
izplacilo(c(50.00, 52.50, 49.88, 52.37, 49.75, 52.24), T, "call")
izplacilo(c(50.00, 52.50, 55.12, 57.88, 60.78, 63.81), T, "call")
izplacilo(c(50.00, 52.50, 55.12, 57.88, 60.78, 63.81), T, "put")
izplacilo(c(50.00, 47.50, 49.88, 47.38, 45.01, 42.76), T, "put")
izplacilo(c(50.00, 47.50, 49.88, 47.38, 45.01, 42.76), T, "call")
T
izplacilo(c(50.00, 47.50, 45.12, 47.38, 49.75, 52.24), T, "call")
izplacilo(c(50.00, 47.50, 45.12, 47.38, 49.75, 52.24), T, "put")
52.24-47.38
49.75-47.38
49.75-45.12
47.38-45.12
izplacilo(c(50.00, 52.50, 49.88, 52.37, 54.99, 57.74), T, "put")
izplacilo(c(50.00, 52.50, 49.88, 52.37, 54.99, 57.74), T, "call")
hcube(3, 4)
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
install.packages(c("combinat", "Rlab"))
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
hcube(C(4, 4))
hcube(c(4, 4), scale = 1)
hcube(c(4, 4), scale = 0)
hcube(c(4, 4))
hcube(c(4, 4), scale = 1, translation = c(1, 1))
hcube(c(1, 1), scale = 1, translation = c(4, 4))
n <- 4
rep(2, n*n)
hcube(rep(2, 9), translation=-1)
hcube(c(4,4), translation=-1)
hcube(c(2, 2), translation=-1)
U
hcube(rep(2, U))
hcube(rep(2, U), translation=-1)
hcube(rep(2, 4), translation=-1)*3
hcube(rep(2, 4), translation=-1, scale = 3)
x <- hcube(rep(2, 4), translation=-1, scale = 3)
x[x<3] <- 0
x
cbind(rep(3, 16), x)
length(x)
nrow(x)
vector()
x <- vector()
c(x, 3)
c(x, 4, 5)
x <- hcube(rep(2, 4), translation=-1, scale = 3)
x[2, :]
x
x <- hcube(rep(2, 4), translation=-1, scale = 3)
x
x[3,]
install.packages(c("combinat", "Rlab"))
cumprod(x)
x
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
q <- (1+R-d)/(u*d)
binomski(50,1.05,0.95,5,0.03,3,"call")
cube
stanja
stanja
stanja
length(stanja)
(1:length(stanja)
7
c(1:length(stanja)
U
2^U
S_0
U
6 * 32
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
View(binomski)
binomski(50,1.05,0.95,5,0.03,3,"call")
binomski(50,1.05,0.95,5,0.03,3,"call")
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski <- function(S0,u,d,U,R,T,type) {
q <- (1+R-d)/(u*d)
cube <- hcube(rep(2, U), translation=-1)*u
cube[cube < 1] <- d
stanja <- cbind(rep(S0, nrow(cube)), cube)
stanja <- cumprod(stanja)
stanja <- matrix(stanja, nrow = 2^U, ncol = (U + 1))
izplacila <- vector()
for (i in (1:length(stanja))) {
izplacano <- izplacilo(stanja[i], T, type)
izplacila <- c(izplacila, izplacano)
}
verjetnosti <- cube
verjetnosti[cube == u] <- q
verjetnosti[cube == d] <- 1-q
verjetnosti <- cumprod(verjetnosti)
izplacilo_in_verjetnosti <- cbind(izplacila, verjetnosti)
pricakovano_izplacilo <- cumprod(izplacilo_in_verjetnosti)
cena <- pricakovano_izplacilo/(1 + R)^U
return(cena)
}
binomski <- function(S0,u,d,U,R,T,type) {
q <- (1+R-d)/(u*d)
cube <- hcube(rep(2, U), translation=-1)*u
cube[cube < 1] <- d
stanja <- cbind(rep(S0, nrow(cube)), cube)
stanja <- cumprod(stanja)
stanja <- matrix(stanja, nrow = 2^U, ncol = (U + 1))
izplacila <- vector()
for (i in (1:length(stanja))) {
izplacano <- izplacilo(stanja[i], T, type)
izplacila <- c(izplacila, izplacano)
}
verjetnosti <- cube
verjetnosti[cube == u] <- q
verjetnosti[cube == d] <- 1-q
verjetnosti <- cumprod(verjetnosti)
izplacilo_in_verjetnosti <- cbind(izplacila, verjetnosti)
pricakovano_izplacilo <- cumprod(izplacilo_in_verjetnosti)
cena <- pricakovano_izplacilo/(1 + R)^U
return(cena)
}
binomski <- function(S0,u,d,U,R,T,type) {
q <- (1+R-d)/(u*d)
cube <- hcube(rep(2, U), translation=-1)*u
cube[cube < 1] <- d
stanja <- cbind(rep(S0, nrow(cube)), cube)
stanja <- cumprod(stanja)
stanja <- matrix(stanja, nrow = 2^U, ncol = (U + 1))
izplacila <- vector()
for (i in (1:length(stanja))) {
izplacano <- izplacilo(stanja[i], T, type)
izplacila <- c(izplacila, izplacano)
}
verjetnosti <- cube
verjetnosti[cube == u] <- q
verjetnosti[cube == d] <- 1-q
verjetnosti <- cumprod(verjetnosti)
izplacilo_in_verjetnosti <- cbind(izplacila, verjetnosti)
pricakovano_izplacilo <- cumprod(izplacilo_in_verjetnosti)
cena <- pricakovano_izplacilo/(1 + R)^U
return(cena)
}
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
stanja
stanja
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
stanja
stanja[3,]
izplacila <- vector()
binomski(50,1.05,0.95,5,0.03,3,"call")
stanje
izplacano
izplacano
izplacano
izplacila
c
n
izplacila
binomski(50,1.05,0.95,5,0.03,3,"call")
binomski(50,1.05,0.95,5,0.03,3,"call")
c
binomski(50,1.05,0.95,5,0.03,3,"call")
length(stanja)
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
izplacila
verjetnosti
q
verjetnosti
install.packages(c("combinat", "Rlab"))
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
debugSource('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
verjetnosti
binomski(50,1.05,0.95,5,0.03,3,"call")
zmnozek
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
zmnozek
zmnozek
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
0.9197995*0.9197995*0.9197995*0.9197995*0.9197995
x <- c(1, 2, 3, 4, 5)
x[-1]
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
2.368750*5.005341e-03
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
2.368750 5.005341e-03
source('~/R/Fin_praktikum/NALOGA3/naloga_3.R', encoding = 'UTF-8')
binomski(50,1.05,0.95,5,0.03,3,"call")
source('~/R/Fin_praktikum/NALOGA2/StoparSpringer2.R', encoding = 'UTF-8')
source('~/.active-rstudio-document')
installed.packages(plotly)
install.packages("plotly")
source('~/.active-rstudio-document')
fig7
df2 <- gather(df1, key = "series_type", value = "value", c(2:4)) %>%
mutate(var_names = factor(var_names, levels = unique(var_names)))
i <- ggplot(df2, aes(x = var_names, y = value, color = series_type, group = series_type)) + geom_line() + geom_point()
i
d2
df2
source('~/AMAT/Efficiency-in-networks/visualisation.R')
setwd("~/AMAT/Efficiency-in-networks")
source('~/AMAT/Efficiency-in-networks/visualisation.R')
m
l <- plot(grid_4x3x2[, c(1, 6)], type = "l")
dt(grid_4x3x2$Percent, rep("Napaka_10"), grid_4x3x2$Napaka_10)
dt(grid_4x3x2$Percent, rep("Napaka_10", 10), grid_4x3x2$Napaka_10)
data.frame((grid_4x3x2$Percent, rep("Napaka_10", 10), grid_4x3x2$Napaka_10))
data.frame(grid_4x3x2$Percent, rep("Napaka_10", 10), grid_4x3x2$Napaka_10)
napake_1 <- rbind(data.frame(grid_4x3x2$Percent, rep("Napaka_10", 10), grid_4x3x2$Napaka_10),
data.frame(grid_4x3x2$Percent, rep("Napaka_100", 100), grid_4x3x2$Napaka_100),
data.frame(grid_4x3x2$Percent, rep("Napaka_1000", 1000), grid_4x3x2$Napaka_1000))
data.frame(grid_4x3x2$Percent, rep("Napaka_100", 100), grid_4x3x2$Napaka_100
)
data.frame(grid_4x3x2$Percent, rep("Napaka_1000", 1000), grid_4x3x2$Napaka_1000)
napake_1 <- rbind(data.frame(grid_4x3x2$Percent, rep("Napaka_10", 10), grid_4x3x2$Napaka_10),
data.frame(grid_4x3x2$Percent, rep("Napaka_100", 10), grid_4x3x2$Napaka_100),
data.frame(grid_4x3x2$Percent, rep("Napaka_1000", 10), grid_4x3x2$Napaka_1000))
data.frame(grid_4x3x2$Percent, rep("Napaka_100", 10), grid_4x3x2$Napaka_100
)
napake_1 <- merge(data.frame(grid_4x3x2$Percent, rep("Napaka_10", 10), grid_4x3x2$Napaka_10),
data.frame(grid_4x3x2$Percent, rep("Napaka_100", 10), grid_4x3x2$Napaka_100),
data.frame(grid_4x3x2$Percent, rep("Napaka_1000", 10), grid_4x3x2$Napaka_1000))
napake_1 <- bind_rows(data.frame(grid_4x3x2$Percent, rep("Napaka_10", 10), grid_4x3x2$Napaka_10),
data.frame(grid_4x3x2$Percent, rep("Napaka_100", 10), grid_4x3x2$Napaka_100),
data.frame(grid_4x3x2$Percent, rep("Napaka_1000", 10), grid_4x3x2$Napaka_1000))
View(napake_1)
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
napake <- c(abs(grid_4x3x2[, 2] - grid_4x3x2[,3]), abs(grid_4x3x2[, 2] - grid_4x3x2[,4]), abs(grid_4x3x2[, 2] - grid_4x3x2[,5]))
napake
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
grid_4x3x2$Napaka_10 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,3])
grid_4x3x2$Napaka_100 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,4])
grid_4x3x2$Napaka_1000 <- abs(grid_4x3x2[, 2] - grid_4x3x2[,5])
grid_4x3x2$Percent <- c("0.01", "0.02", "0.03", "0.04", "0.05", "0.1", "0.15", "0.2", "0.25", "0.5")
napake
vrsta <- c(rep("10", 10), rep("100", 10), rep("1000", 10))
vrsta
napake_1 <- data_frame("Percent" = percent, "value" = vrsta, "napaka" = napake)
percent <- c("0.01", "0.02", "0.03", "0.04", "0.05", "0.1", "0.15", "0.2", "0.25", "0.5")
vrsta <- c(rep("10", 10), rep("100", 10), rep("1000", 10))
napake <- c(abs(grid_4x3x2[, 2] - grid_4x3x2[,3]), abs(grid_4x3x2[, 2] - grid_4x3x2[,4]), abs(grid_4x3x2[, 2] - grid_4x3x2[,5]))
napake_1 <- data_frame("Percent" = percent, "value" = vrsta, "napaka" = napake)
rlang::last_error()
percent <- rep(c("0.01", "0.02", "0.03", "0.04", "0.05", "0.1", "0.15", "0.2", "0.25", "0.5"), 3)
vrsta <- c(rep("10", 10), rep("100", 10), rep("1000", 10))
napake <- c(abs(grid_4x3x2[, 2] - grid_4x3x2[,3]), abs(grid_4x3x2[, 2] - grid_4x3x2[,4]), abs(grid_4x3x2[, 2] - grid_4x3x2[,5]))
napake_1 <- data_frame("Percent" = percent, "value" = vrsta, "napaka" = napake)
View(napake_1)
Sim <- read.csv("Data/Sim.csv")
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
percent <- rep(c("0.01", "0.02", "0.03", "0.04", "0.05", "0.1", "0.15", "0.2", "0.25", "0.5"), 3)
vrsta <- c(rep("10", 10), rep("100", 10), rep("1000", 10))
napake <- c(abs(grid_4x3x2[, 2] - grid_4x3x2[,3]), abs(grid_4x3x2[, 2] - grid_4x3x2[,4]), abs(grid_4x3x2[, 2] - grid_4x3x2[,5]))
napake_1 <- data_frame("Percent" = percent, "value" = vrsta, "napaka" = napake)
l <- plot(napake_1, type = "l")
df2
m <- ggplot(grid_4x3x2, aes(x = Percent, y = napaka, group = value)) + geom_line()
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, group = value)) + geom_line()
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value,group = value)) + geom_line()
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_void()
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic()
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic()
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic() + labs(color = "Napaka", x = "Procent", y = "Vrednosti napake")
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic() + labs(color = "Napaka", x = "Procent", y = "Vrednosti napake", title = "Napaka približkov za graf 4x3x2")
m
plot(napake_1)
plot(napake_1[, C(1, 3)])
library(readr)
library(ggplot2)
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic() + labs(color = "Napaka", x = "Procent", y = "Vrednosti napake", title = "Napaka približkov za graf 4x3x2") +
theme(legend.position = c(0.7, 0.2),legend.direction = "horizontal")
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake", title = "Napaka približkov za graf 4x3x2") +
theme(legend.position = c(0.7, 0.07),legend.direction = "horizontal")
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake", title = "Napaka približkov za graf 4x3x2") +
theme(legend.position = c(0.7, 0.7),legend.direction = "horizontal")
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake", title = "Napaka približkov za graf 4x3x2") +
theme(legend.position = c(0.7, 0.7),legend.direction = "vertical")
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake") +
theme(legend.position = c(1, 0.9),legend.direction = "vertical")
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical")
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
panel.border = element_rect(colour = "black", fill=NA, size=5)
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=5))
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line() +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=2))
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line(2) +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=2))
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line(size = 2) +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=2))
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line(size = 1) +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=2))
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line(size = 1) +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line(size = 1) +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake", title = "fs") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line(size = 1) +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake", title = "Napaka približkov za graf 4x3x2") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line(size = 1) +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake", title = "Napaka približkov za graf 4x3x2") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) +
scale_color_manual("deeppink", "cyan", "green1")
m
m <- ggplot(napake_1, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line(size = 1) +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake", title = "Napaka približkov za graf 4x3x2") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) +
scale_color_manual(values = c("deeppink", "cyan", "green1"))
m
View(Sim)
# Tree 5
tree_5 <- Sim[c(351, 360), c(2:6)]
View(tree_5)
# Tree 5
tree_5 <- Sim[c(351:360), c(2:6)]
View(tree_5)
napake <- c(abs(tree_5[, 2] - tree_5[,3]), abs(tree_5[, 2] - tree_5[,4]), abs(tree_5[, 2] - tree_5[,5]))
Sim <- read.csv("Data/Sim.csv")
# Grid 4x3x2
grid_4x3x2 <- Sim[c(301:310), c(2:6)]
percent <- rep(c("0.01", "0.02", "0.03", "0.04", "0.05", "0.1", "0.15", "0.2", "0.25", "0.5"), 3)
vrsta <- c(rep("10", 10), rep("100", 10), rep("1000", 10))
napake <- c(abs(grid_4x3x2[, 2] - grid_4x3x2[,3]), abs(grid_4x3x2[, 2] - grid_4x3x2[,4]), abs(grid_4x3x2[, 2] - grid_4x3x2[,5]))
napake_grid <- data_frame("Percent" = percent, "value" = vrsta, "napaka" = napake)
napaka_grid <- ggplot(napake_grid, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line(size = 1) +
theme_classic() + labs(color = "Število poskousov", x = "Procent", y = "Vrednosti napake", title = "Napaka približkov za graf 4x3x2") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) +
scale_color_manual(values = c("deeppink", "cyan", "green1"))
# Tree 5
tree_5 <- Sim[c(351:360), c(2:6)]
napake <- c(abs(tree_5[, 2] - tree_5[,3]), abs(tree_5[, 2] - tree_5[,4]), abs(tree_5[, 2] - tree_5[,5]))
# Tree 5
tree_5 <- Sim[c(351:360), c(2:6)]
napaka_tr <- c(abs(tree_5[, 2] - tree_5[,3]), abs(tree_5[, 2] - tree_5[,4]), abs(tree_5[, 2] - tree_5[,5]))
napake_tree <- data_frame("Procent" = percent, "value" = vrsta, "napaka" = napaka_gr)
# Tree 5
tree_5 <- Sim[c(351:360), c(2:6)]
napaka_tr <- c(abs(tree_5[, 2] - tree_5[,3]), abs(tree_5[, 2] - tree_5[,4]), abs(tree_5[, 2] - tree_5[,5]))
napake_tree <- data_frame("Procent" = percent, "value" = vrsta, "napaka" = napaka_tr)
View(napake_tree)
graf_napaka_tree <- ggplot(napake_tree, aes(x = Procent, y = napaka, color = value, group = value)) + geom_line(size = 1) +
theme_classic() + labs(color = "Število poskousov", y = "Vrednosti napake", title = "Napaka približkov za graf 4x3x2") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) +
scale_color_manual(values = c("deeppink", "cyan", "green1"))
graf_napaka_tree <- ggplot(napake_tree, aes(x = Procent, y = napaka, color = value, group = value)) + geom_line(size = 1) +
theme_classic() + labs(color = "Število poskousov", y = "Vrednosti napake", title = "Napaka približkov za drevo globine 5") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) +
scale_color_manual(values = c("deeppink", "cyan", "green1"))
graf_napaka_tree
source('~/AMAT/Efficiency-in-networks/visualisation.R', encoding = 'UTF-8')
graf_napaka_grid <- ggplot(napake_grid, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line(size = 1) +
theme_classic() + labs(color = "Število poskousov", x = "Delež", y = "Absolutna napaka", title = "Napaka približkov za graf 4x3x2") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) +
scale_color_manual(values = c("deeppink", "cyan", "green1"))
source('~/AMAT/Efficiency-in-networks/visualisation.R', encoding = 'UTF-8')
graf_napaka_grid
graf_napaka_tree
setwd("~/AMAT/Efficiency-in-networks")
graf_napaka_grid <- ggplot(napake_grid, aes(x = Percent, y = napaka, color = value, group = value)) + geom_line(size = 1) +
theme_classic() + labs(color = "Število poskousov", x = "Delež", y = "Absolutna napaka", title = "Napaka približkov za graf 4x3x2") +
theme(legend.position = c(0.8, 0.8),legend.direction = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) +
scale_color_manual(values = c("deeppink", "cyan", "green1"))
png("Pictures/Grid_4x3x2.png")
print(graf_napaka_grid)
dev.off()
source('~/AMAT/Efficiency-in-networks/visualisation.R', encoding = 'UTF-8')
